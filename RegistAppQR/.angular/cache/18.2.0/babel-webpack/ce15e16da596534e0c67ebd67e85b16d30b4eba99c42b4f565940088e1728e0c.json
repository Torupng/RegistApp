{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Zhnz/Desktop/Trabajo/SkeletonAPP-008V/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"src/app/services/login.service\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = () => [\"/\"];\nexport class LoginPage {\n  constructor(router, toastController, loginService) {\n    this.router = router;\n    this.toastController = toastController;\n    this.loginService = loginService;\n    this.welcomeMessage = 'Bienvenido!';\n  }\n  validateLogin() {\n    if (this.loginService.validateLogin(this.username, this.password)) {\n      this.toastMessage('Usuario y contraseña valido', 'success');\n      this.router.navigate(['/home']);\n    } else {\n      this.toastMessage('Usuario y contraseña no valido', 'danger');\n    }\n  }\n  toastMessage(message, color) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this.toastController.create({\n        message: message,\n        duration: 3000,\n        position: 'bottom',\n        color: color\n      });\n      toast.present();\n    })();\n  }\n  static #_ = this.ɵfac = function LoginPage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ToastController), i0.ɵɵdirectiveInject(i3.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 7,\n    consts: [[1, \"ion-no-border\", 3, \"translucent\"], [1, \"ion-text-center\"], [3, \"fullscreen\"], [1, \"ion-no-border\", \"ion-text-center\"], [\"size\", \"large\"], [\"label\", \"Username\", 3, \"ngModelChange\", \"ngModel\"], [\"label\", \"Password\", \"type\", \"password\", 3, \"ngModelChange\", \"ngModel\"], [\"href\", \"\"], [\"expand\", \"block\", 3, \"routerLink\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\", 1)(3, \"h1\");\n        i0.ɵɵtext(4, \"SkeletonAPP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h6\");\n        i0.ɵɵtext(6, \"Aqui comienza todo\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(7, \"ion-content\", 2)(8, \"ion-header\", 3)(9, \"ion-toolbar\")(10, \"ion-title\", 4);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"ion-list\")(13, \"ion-item\")(14, \"ion-input\", 5);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_14_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"ion-item\")(16, \"ion-input\", 6);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_16_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"a\", 7);\n        i0.ɵɵtext(18, \"No recuerdas tu contrase\\u00F1a?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-button\", 8);\n        i0.ɵɵtext(20, \" Ingresar \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.welcomeMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    dependencies: [i4.NgControlStatus, i4.NgModel, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonList, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor, i2.RouterLinkDelegate, i1.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginPage","constructor","router","toastController","loginService","welcomeMessage","validateLogin","username","password","toastMessage","navigate","message","color","_this","_asyncToGenerator","toast","create","duration","position","present","_","i0","ɵɵdirectiveInject","i1","Router","i2","ToastController","i3","LoginService","_2","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","LoginPage_Template_ion_input_ngModelChange_14_listener","$event","ɵɵtwoWayBindingSet","LoginPage_Template_ion_input_ngModelChange_16_listener","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ɵɵtwoWayProperty","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\Zhnz\\Desktop\\Trabajo\\SkeletonAPP-008V\\src\\app\\pages\\login\\login.page.ts","C:\\Users\\Zhnz\\Desktop\\Trabajo\\SkeletonAPP-008V\\src\\app\\pages\\login\\login.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n\n  username!: string;\n  password!: string;\n  welcomeMessage: string = 'Bienvenido!';\n\n  constructor(\n    private router: Router,\n    private toastController: ToastController,\n    private loginService: LoginService\n  ) {}\n\n  validateLogin() {\n    if (\n      this.loginService.validateLogin(this.username, this.password)\n    ) {\n      this.toastMessage('Usuario y contraseña valido', 'success');\n      this.router.navigate(['/home']);\n    } else {\n      this.toastMessage('Usuario y contraseña no valido', 'danger');\n    }\n  }\n\n  async toastMessage(message: string, color: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n      position: 'bottom',\n      color: color,\n    });\n    toast.present();\n  }\n\n}\n","<ion-header [translucent]=\"true\" class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-title class=\"ion-text-center\">\n      <h1>SkeletonAPP</h1>\n      <h6>Aqui comienza todo</h6>\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header class=\"ion-no-border ion-text-center\">\n    <ion-toolbar>\n      <ion-title size=\"large\">{{welcomeMessage}}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-list>\n    <ion-item>\n      <ion-input label=\"Username\" [(ngModel)]=\"username\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-input label=\"Password\" [(ngModel)]=\"password\" type=\"password\"></ion-input>\n    </ion-item>\n  </ion-list>\n    <a href=\"\">No recuerdas tu contraseña?</a>\n  <ion-button expand=\"block\" [routerLink]=\"['/']\">\n    Ingresar\n  </ion-button>\n\n</ion-content>\n"],"mappings":";;;;;;;AAWA,OAAM,MAAOA,SAAS;EAMpBC,YACUC,MAAc,EACdC,eAAgC,EAChCC,YAA0B;IAF1B,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,YAAY,GAAZA,YAAY;IALtB,KAAAC,cAAc,GAAW,aAAa;EAMnC;EAEHC,aAAaA,CAAA;IACX,IACE,IAAI,CAACF,YAAY,CAACE,aAAa,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,EAC7D;MACA,IAAI,CAACC,YAAY,CAAC,6BAA6B,EAAE,SAAS,CAAC;MAC3D,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,MAAM;MACL,IAAI,CAACD,YAAY,CAAC,gCAAgC,EAAE,QAAQ,CAAC;IAC/D;EACF;EAEMA,YAAYA,CAACE,OAAe,EAAEC,KAAa;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC/C,MAAMC,KAAK,SAASF,KAAI,CAACV,eAAe,CAACa,MAAM,CAAC;QAC9CL,OAAO,EAAEA,OAAO;QAChBM,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,QAAQ;QAClBN,KAAK,EAAEA;OACR,CAAC;MACFG,KAAK,CAACI,OAAO,EAAE;IAAC;EAClB;EAAC,QAAAC,CAAA,G;qCA/BUpB,SAAS,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,eAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAT7B,SAAS;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRhBf,EAHN,CAAAiB,cAAA,oBAAuD,kBACxC,mBACwB,SAC7B;QAAAjB,EAAA,CAAAkB,MAAA,kBAAW;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QACpBnB,EAAA,CAAAiB,cAAA,SAAI;QAAAjB,EAAA,CAAAkB,MAAA,yBAAkB;QAG5BlB,EAH4B,CAAAmB,YAAA,EAAK,EACjB,EACA,EACH;QAKPnB,EAHN,CAAAiB,cAAA,qBAAiC,oBACmB,kBACnC,oBACa;QAAAjB,EAAA,CAAAkB,MAAA,IAAkB;QAE9ClB,EAF8C,CAAAmB,YAAA,EAAY,EAC1C,EACH;QAITnB,EAFJ,CAAAiB,cAAA,gBAAU,gBACE,oBAC2C;QAAvBjB,EAAA,CAAAoB,gBAAA,2BAAAC,uDAAAC,MAAA;UAAAtB,EAAA,CAAAuB,kBAAA,CAAAP,GAAA,CAAA9B,QAAA,EAAAoC,MAAA,MAAAN,GAAA,CAAA9B,QAAA,GAAAoC,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAsB;QACpDtB,EADqD,CAAAmB,YAAA,EAAY,EACtD;QAETnB,EADF,CAAAiB,cAAA,gBAAU,oBAC2D;QAAvCjB,EAAA,CAAAoB,gBAAA,2BAAAI,uDAAAF,MAAA;UAAAtB,EAAA,CAAAuB,kBAAA,CAAAP,GAAA,CAAA7B,QAAA,EAAAmC,MAAA,MAAAN,GAAA,CAAA7B,QAAA,GAAAmC,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAsB;QAEtDtB,EAFuE,CAAAmB,YAAA,EAAY,EACtE,EACF;QACTnB,EAAA,CAAAiB,cAAA,YAAW;QAAAjB,EAAA,CAAAkB,MAAA,wCAA2B;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;QAC5CnB,EAAA,CAAAiB,cAAA,qBAAgD;QAC9CjB,EAAA,CAAAkB,MAAA,kBACF;QAEFlB,EAFE,CAAAmB,YAAA,EAAa,EAED;;;QA7BFnB,EAAA,CAAAyB,UAAA,qBAAoB;QASnBzB,EAAA,CAAA0B,SAAA,GAAmB;QAAnB1B,EAAA,CAAAyB,UAAA,oBAAmB;QAGFzB,EAAA,CAAA0B,SAAA,GAAkB;QAAlB1B,EAAA,CAAA2B,iBAAA,CAAAX,GAAA,CAAAhC,cAAA,CAAkB;QAMdgB,EAAA,CAAA0B,SAAA,GAAsB;QAAtB1B,EAAA,CAAA4B,gBAAA,YAAAZ,GAAA,CAAA9B,QAAA,CAAsB;QAGtBc,EAAA,CAAA0B,SAAA,GAAsB;QAAtB1B,EAAA,CAAA4B,gBAAA,YAAAZ,GAAA,CAAA7B,QAAA,CAAsB;QAI3Ba,EAAA,CAAA0B,SAAA,GAAoB;QAApB1B,EAAA,CAAAyB,UAAA,eAAAzB,EAAA,CAAA6B,eAAA,IAAAC,GAAA,EAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}